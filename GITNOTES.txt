
Git and GitHub: 

Below are the methods for cloning remote repository.  

Clone - cloning a repository on our local machine.
git clone <-link->

check .git for GitHub file to see this u have to use command (ls -a) 

status - Displays the state of the code. 
git status ke chaar type hai 
1. Untracked
2. Modified
3. Staged
4. Unmodified

untracked -> file means wo file jisko git track nahi kar raha hai abhi 
Modified -> File mein changes hue hai 
Staged -> File commit ke liye ready hai 
Unmodified -> file mein koi bhi changes nahi hue hai 


Below are the methods for commiting and pushing local repository. 
commiting steps. 

kisi bhi file ko modify karne ke baad humay two step process karna padta hai 

ADD - Adds new or changed files in working directory
ADD - For single file git add <-file name-> or For all file (git add .)
 
Now commit 
command git commit -m "some message"

aray yaar abhi bhi GitHub pe code nahi dikh raha hai
uske liye code ko commit ke saath push bhi karna hota hai 

Final steps. 
so Now,

         git push origin main. for push code to the GitHub:)

so now we wil create local to remote repository means hamesha ki Tarah local machine pey repo banayege lekin lekin banana ke baad usay GitHub se integrate kr dege. 

step 1 -->  git init -> is a command used to make localrepo to remoterepo.

step2 -->  git remote add origin <-link->

step3 --> git remote -v to verify the remote.

step4 --> git branch command used to check the branch.

step5 --> git branch -M main is used to rename a branch. 

Final step --> git push origin main.


Itna seekh lene se bhi lagbahg personal projects ke liye kaam chal sakta hai halaki branches ke baaare mein jaanna accha hoga but this is the least u should know.

UNDOING CHANGES. 

git reset <file ka naam jisko undo karna hai ---- note sirf added files ke liye hai commited ke liye nahi 
git reset <pura repo reset hoga ----------------- note sirf added files ke liye hai commited ke liye nahi 
git reset HEAD~1 -------------------------------- note sirf cmmited files ke liye ha added ke liye nahi 
git log ----------------------------------------- note apne sare commits ko check kr sakte hai. 
git reset hash ---------------------------------- note multiple commits or kisi certain commits par jana or undo karna bhi bol sakte hai 
git reset --hard -------------------------------- note after doing this sirf git hi nahi ide se bhi commits ke codes undo ho jayege. 



 
----------------------------------------------------------------------------------------------------------..........................................................................................................==========================================================================================================

                                GIT BRANCHES

Git branches are like a copy of your code where you can experiment, add features, fix bugs, etc., without touching the main version.

 Why Use Branches?

Work on new features without breaking the main app.
Try bug fixes safely.

 Multiple people can work on the same project at the same time.

 Once everything works fine, you can merge your branch back into the main branch.

  🛠️✅ Command                                  	💬 What It Does

git branch ------------------------	Show all branches and also highlights which branch you're currently in
git branch <branch-name> ----------	Create a new branch
git checkout <branch-name> --------	Switch to an existing branch
git checkout -b <new-branch-name> -	Create and switch to a new branch (shortcut)
git merge <branch-name> -----------	Merge the given branch into the current branch
git branch -d <branch-name> -------	Delete the specified branch

Merge branches.

git diff <jis branch ko compare karna hai uska naam> ---- will compare two branches. 
git merge <jis branch ko merge akrna hai uska naam> ----- merge two branches. 

PULL REQUESTS OR PR. 
better to manage on github itself. 

git pull origin branch name --------------------------pulls remote changes to local. 
..........................................................................................................

 Merge Conflict?
 A merge conflict happens when two branches change the same part of a file, and Git doesn’t know which change to keep.

 RESOLVING MERGE CONFLICT..........

 incoming change - jo pahle se hi hai 
 current cahnge - jo abhi change kiye hai 

FORJK UNDERSTANDING. 

fork is just a rough copy of a project or repo.

| 🔧 Term                      | What it Does                                                 |
| -----------------------------| ------------------------------------------------------------- |
|   Fork                       | Copies repo from   someone else’s GitHub  →   your GitHub     |
|  C lone                      | Copies repo from   GitHub   →   your local machine (laptop)   |


Specific commit pick kr sakte hai iss commando se.

below is the method of cloning specific commit
 Run this comands. 
 
 '''mkdir my-project
cd my-project
git init''''

git remote add other https://github.com/gitusername/repositoryname.git

git fetch other


git cherry-pick commit id 







